interval_df  <- hmm_unique_df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
if (nrow(interval_df) > 0 ){
results <- rbind(results,interval_df)
}
}
}
return(results%>% distinct())
}
# Here 30_60 interval does not contains any TP so we set the 30_60 as 25. The mean score was 21 which we will encapsulate in the subfive condition.
#Filter OxyN data with cutoffs to compare to BLAST interval reads
OxyN_filtered_median <- cyclaseOxyN_recoded %>% filter((interval == "0_30" & HMMScore>=30)|
(interval == "10_40" & HMMScore >=30)|
(interval == "20_50" & HMMScore >=25)|
(interval == "30_60" & HMMScore >=25)|
(interval == "40_70" & HMMScore >=25 )|
(interval == "50_80" & HMMScore>=25)|
(interval == "60_90" & HMMScore >=35 ) |
(interval == "70_100" & HMMScore >=40 )|
(interval == "80_110" & HMMScore >=40 )|
(interval == "90_120" & HMMScore >=35 )|
(interval == "100_130" & HMMScore >=35 )|
(interval == "110_140" & HMMScore >=30 )|
(interval == "120_150" & HMMScore >=25 )|
(interval == "130_160" & HMMScore >=30 )|
(interval == "140_170" & HMMScore >=30 )|
(interval == "150_180" & HMMScore >=35 )|
(interval == "160_190" & HMMScore >=30 )|
(interval == "170_200" & HMMScore >=35 )|
(interval == "180_210" & HMMScore >=40 )|
(interval == "190_220" & HMMScore >=35 )|
(interval == "200_230" & HMMScore >=35 )|
(interval == "210_240" & HMMScore >=40 )|
(interval == "220_250" & HMMScore >=40 )|
(interval == "230_260" & HMMScore >=40 )|
(interval == "240_270" & HMMScore >=40 )|
(interval == "250_280" & HMMScore >=40 ))
OxyN_filtered_median_subfive<-cyclaseOxyN_recoded %>% filter((interval == "0_30" & HMMScore>=25)|
(interval == "10_40" & HMMScore >=25)|
(interval == "20_50" & HMMScore >=20)|
(interval == "30_60" & HMMScore >=20)|
(interval == "40_70" & HMMScore >=20 )|
(interval == "50_80" & HMMScore>=20)|
(interval == "60_90" & HMMScore >=30 ) |
(interval == "70_100" & HMMScore >=35 )|
(interval == "80_110" & HMMScore >=35 )|
(interval == "90_120" & HMMScore >=30 )|
(interval == "100_130" & HMMScore >=30 )|
(interval == "110_140" & HMMScore >=25 )|
(interval == "120_150" & HMMScore >=20 )|
(interval == "130_160" & HMMScore >=25 )|
(interval == "140_170" & HMMScore >=25 )|
(interval == "150_180" & HMMScore >=30 )|
(interval == "160_190" & HMMScore >=25 )|
(interval == "170_200" & HMMScore >=30 )|
(interval == "180_210" & HMMScore >=35 )|
(interval == "190_220" & HMMScore >=30 )|
(interval == "200_230" & HMMScore >=30 )|
(interval == "210_240" & HMMScore >=35 )|
(interval == "220_250" & HMMScore >=35 )|
(interval == "230_260" & HMMScore >=35 )|
(interval == "240_270" & HMMScore >=35 )|
(interval == "250_280" & HMMScore >=35 ))
OxyN_filtered_median_plusfive <- cyclaseOxyN_recoded %>% filter((interval == "0_30" & HMMScore>=35)|
(interval == "10_40" & HMMScore >=35)|
(interval == "20_50" & HMMScore >=30)|
(interval == "30_60" & HMMScore >=30)|
(interval == "40_70" & HMMScore >=30 )|
(interval == "50_80" & HMMScore>=30)|
(interval == "60_90" & HMMScore >=40 ) |
(interval == "70_100" & HMMScore >=45 )|
(interval == "80_110" & HMMScore >=45 )|
(interval == "90_120" & HMMScore >=40 )|
(interval == "100_130" & HMMScore >=40 )|
(interval == "110_140" & HMMScore >=35 )|
(interval == "120_150" & HMMScore >=30 )|
(interval == "130_160" & HMMScore >=35 )|
(interval == "140_170" & HMMScore >=35 )|
(interval == "150_180" & HMMScore >=40 )|
(interval == "160_190" & HMMScore >=35 )|
(interval == "170_200" & HMMScore >=40 )|
(interval == "180_210" & HMMScore >=45 )|
(interval == "190_220" & HMMScore >=40 )|
(interval == "200_230" & HMMScore >=40 )|
(interval == "210_240" & HMMScore >=45 )|
(interval == "220_250" & HMMScore >=45 )|
(interval == "230_260" & HMMScore >=45 )|
(interval == "240_270" & HMMScore >=45 )|
(interval == "250_280" & HMMScore >=45 ))
#return the hmm-unique reads
return_hmm_unique <- function(hmm_df, blast_df){
oxyn_hmm_df <- hmm_df  %>% select(-c(window))
oxyn_hmm_df$interval <- as.character(oxyn_hmm_df$interval)
names(oxyn_hmm_df)[names(oxyn_hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
OxyN_hmm_unique <- oxyn_hmm_df %>% anti_join(.,blast_df, by= c("readID", "Sample", "sampleType", "interval"))
return(OxyN_hmm_unique)
}
median_oxyN_hmmunique <-return_hmm_unique(OxyN_filtered_median, oxyN_blast_intervals)
median_OxyN_hmmunique_less_model_cov<-compare_hmm_unique(median_oxyN_hmmunique,all_t2pksBlastDF,oxyn_positions )
median_remaining_hmm_oxyn<- median_oxyN_hmmunique %>% anti_join(.,median_OxyN_hmmunique_less_model_cov)
table(median_remaining_hmm_oxyn$interval)
pks_genomes_median_check <- c("gi|1098134558|emb|FOXX01000014.1|", "gi|928414697|gb|LGKI01000478.1|",
"LZZI01000003.1", "gi|928416322|gb|LGKI01000367.1|", "gi|928420278|gb|LGKI01000101.1|", "gi|1098137419|emb|FOXX01000002.1|", "OBDZ01000030.1", "gi|640937269|gb|JJOH01000002.1|", "gi|1081600317|emb|FMWJ01000012.1|", "gi|754859657|ref|NZ_CP009285.1|",
"gi|529222834|ref|NC_021985.1|")
#median_remaining_hmm_oxyn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
remaining_hmm_oxyn_pos_median_check <- median_remaining_hmm_oxyn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_median_check)
############################################################################################################################
subfive_oxyN_hmmunique <-return_hmm_unique(OxyN_filtered_median_subfive, oxyN_blast_intervals)
subfive_OxyN_hmmunique_less_model_cov<-compare_hmm_unique(subfive_oxyN_hmmunique,all_t2pksBlastDF,oxyn_positions )
subfive_remaining_hmm_oxyn<- subfive_oxyN_hmmunique %>% anti_join(.,subfive_OxyN_hmmunique_less_model_cov)
table(subfive_remaining_hmm_oxyn$interval)
#subfive_remaining_hmm_oxyn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_subfive_check <- c("gi|1098134558|emb|FOXX01000014.1|", "gi|1081600317|emb|FMWJ01000012.1|",
"gi|529222834|ref|NC_021985.1|", "gi|1098137909|emb|FOXX01000001.1|",
"AZXI01000011.1", "AZXI01000027.1", "JOFH01000053.1", "gi|928416322|gb|LGKI01000367.1|", "gi|1098137419|emb|FOXX01000002.1|", "gi|928414697|gb|LGKI01000478.1|",
"LZZI01000003.1", "gi|928420278|gb|LGKI01000101.1|", "OBDZ01000030.1",
"gi|640937269|gb|JJOH01000002.1|", "gi|754859657|ref|NZ_CP009285.1|",
"gi|928421449|gb|LGKI01000001.1|", "gi|1098136977|emb|FOXX01000003.1|")
remaining_hmm_oxyn_pos_subfive_check <- subfive_remaining_hmm_oxyn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_subfive_check)
###############################################################################################################################################
plusfive_oxyN_hmmunique <-return_hmm_unique(OxyN_filtered_median_plusfive, oxyN_blast_intervals)
plusfive_OxyN_hmmunique_less_model_cov<-compare_hmm_unique(plusfive_oxyN_hmmunique,all_t2pksBlastDF,oxyn_positions )
plusfive_remaining_hmm_oxyn<- plusfive_oxyN_hmmunique %>% anti_join(.,plusfive_OxyN_hmmunique_less_model_cov)
table(plusfive_remaining_hmm_oxyn$interval)
#plusfive_remaining_hmm_oxyn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_plusfive_check <- c("LZZI01000003.1", "gi|928416322|gb|LGKI01000367.1|","gi|928420278|gb|LGKI01000101.1|", "gi|1098137419|emb|FOXX01000002.1|", "gi|928414697|gb|LGKI01000478.1|", "gi|1081600317|emb|FMWJ01000012.1|", "gi|529222834|ref|NC_021985.1|", "OBDZ01000030.1")
remaining_hmm_oxyn_pos_plusfive_check <- plusfive_remaining_hmm_oxyn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_plusfive_check)
calculate_F1 <- function(hmm_df, hmm_fp, blast_df, intervals){
#added this because factor vector
hmm_df$interval <- as.character(hmm_df$interval)
hmm_df <- hmm_df %>% select(-c(window))
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
results<-data.frame(interval=character(), F1=numeric())
for (i in 1:length(intervals)){
model <- intervals[i]
model_hmm <- hmm_df %>% filter(interval== model) # filter out model HMM results
model_blast <- blast_df %>% filter(interval== model)
model_hmm_fp <-hmm_fp %>% filter(interval== model)
TP <- model_hmm %>% inner_join(.,model_blast) %>% nrow()
FP <- model_hmm_fp %>% nrow()
FN <- model_blast %>% anti_join(.,model_hmm) %>% nrow()
F1_metric <- (2*TP)/((2*TP)+FP+FN)
row <- data.frame(cbind(model, F1_metric))
results<- results %>% add_row(interval = model, F1 = F1_metric)
}
return(results)
}
remove_oxyN_reads_subfive <- data.frame(
readID =   c("gi|1081600317|emb|FMWJ01000012.1|-26706/2","gi|1081600317|emb|FMWJ01000012.1|-260274/2","gi|1081600317|emb|FMWJ01000012.1|-226912/2","gi|1081600317|emb|FMWJ01000012.1|-211358/1",
"gi|1081600317|emb|FMWJ01000012.1|-152894/2","gi|1081600317|emb|FMWJ01000012.1|-102984/2",
"gi|928414697|gb|LGKI01000478.1|-10802/2","gi|1081600317|emb|FMWJ01000012.1|-31198/2",
"gi|1081600317|emb|FMWJ01000012.1|-20688/1"),
Sample = c("synthetic_stool_high_S16", "synthetic_stool_low_S11", "synthetic_stool_low_S11", "synthetic_stool_low_S11", "synthetic_stool_low_S11",
"synthetic_stool_low_S11", "synthetic_stool_low_S22", "synthetic_stool_low_S2", "synthetic_stool_low_S2"))
subfive_false_postives <- subfive_remaining_hmm_oxyn %>% anti_join(.,remove_oxyN_reads_subfive)
remove_oxyN_reads_median <- data.frame(
readID = c("gi|1081600317|emb|FMWJ01000012.1|-31198/2","gi|1081600317|emb|FMWJ01000012.1|-20688/1","gi|928414697|gb|LGKI01000478.1|-10802/2","gi|1081600317|emb|FMWJ01000012.1|-260274/2",
"gi|1081600317|emb|FMWJ01000012.1|-226912/2","gi|1081600317|emb|FMWJ01000012.1|-152894/2",
"gi|1081600317|emb|FMWJ01000012.1|-102984/2"),
Sample = c("synthetic_stool_low_S2", "synthetic_stool_low_S2", "synthetic_stool_low_S22", "synthetic_stool_low_S11", "synthetic_stool_low_S11",
"synthetic_stool_low_S11", "synthetic_stool_low_S11"))
median_false_postives <- median_remaining_hmm_oxyn %>% anti_join(.,remove_oxyN_reads_median)
remove_oxyN_reads_plusfive <- data.frame(
readID = c("gi|1081600317|emb|FMWJ01000012.1|-260274/2",
"gi|1081600317|emb|FMWJ01000012.1|-226912/2","gi|1081600317|emb|FMWJ01000012.1|-152894/2","gi|1081600317|emb|FMWJ01000012.1|-102984/2", "gi|928414697|gb|LGKI01000478.1|-10802/2"),
Sample = c("synthetic_stool_low_S11", "synthetic_stool_low_S11", "synthetic_stool_low_S11", "synthetic_stool_low_S11", "synthetic_stool_low_S22"))
plusfive_false_postives <- plusfive_remaining_hmm_oxyn %>% anti_join(.,remove_oxyN_reads_plusfive)
oxyn_f1_cutoff_median<- calculate_F1(OxyN_filtered_median, median_false_postives, oxyN_blast_intervals, unique(cyclaseOxyN_recoded$interval))
oxyn_f1_cutoff_median$cutoff<- "median"
oxyn_f1_cutoff_plusfive<- calculate_F1(OxyN_filtered_median_plusfive, plusfive_false_postives, oxyN_blast_intervals, unique(cyclaseOxyN_recoded$interval))
oxyn_f1_cutoff_plusfive$cutoff<- "+5"
oxyn_f1_cutoff_subfive<- calculate_F1(OxyN_filtered_median_subfive, subfive_false_postives, oxyN_blast_intervals, unique(cyclaseOxyN_recoded$interval))
oxyn_f1_cutoff_subfive$cutoff<- "-5"
oxyn_f1_df <- rbind(oxyn_f1_cutoff_median,oxyn_f1_cutoff_plusfive,oxyn_f1_cutoff_subfive )
supp_fig_oxyN_f1 <-ggplot(data = oxyn_f1_df, mapping = aes(x = interval, y = F1, group= cutoff, colour=cutoff )) + geom_point()+
geom_line() + ylim(0,1)+ geom_hline(yintercept=.50, linetype="dashed",
color = "red", size=1) + theme_pubclean() +  scale_color_npg(name="HMM Score Cutoff")
#ggsave(supp_fig_oxyN_f1, file="OxyN_synthetic_F1-supp.eps", device="eps", width = 17, height = 7)
supp_fig_oxyN_f1 <-ggplot(data = oxyn_f1_df, mapping = aes(x = interval, y = F1, group= cutoff, colour=cutoff )) + geom_point()+
geom_line() + ylim(0,1)+ geom_hline(yintercept=.50, linetype="dashed",
color = "red", size=1) + theme_pubclean() +  scale_color_npg(name="HMM Score Cutoff")
ggsave(supp_fig_oxyN_f1, file="OxyN_synthetic_F1-supp.eps", device="eps", width = 17, height = 7)
final_ggplot_oxyn<- oxyn_f1_df %>% group_by(interval) %>% top_n(1, F1) %>% ungroup() %>% ggplot(., mapping = aes(x = interval, y = F1, group= 1 )) + geom_point()+ ylim(0,1)+
geom_line() +  geom_hline(yintercept=.50, linetype="dashed",
color = "red", size=1) + theme_pubclean()+ scale_color_npg()
ggsave(final_ggplot_oxyn, file="OxyN_synthetic_F1-final.eps", device="eps", width = 17, height = 7)
final_ggplot_oxyn_full<- oxyn_f1_df %>% group_by(interval) %>% top_n(1, F1) %>% ungroup() %>% ggplot(., mapping = aes(x = interval, y = F1, group= 1 )) + geom_point()+ ylim(0,1)+
geom_line() +  geom_hline(yintercept=.50, linetype="dashed",
color = "red", size=1) + geom_hline(yintercept=0.4691412, linetype="dashed",
color = "green", size=1) +theme_pubclean()
ggsave(final_ggplot_oxyn_full, file="OxyN_synthetic_F1-final-with-Full-F1.eps", device="eps", width = 17, height = 7)
# Finalized cutoffs with intervals and cutoffs
OxyN_filtered_final <- cyclaseOxyN_recoded %>% filter((interval == "0_30" & HMMScore>=25)|
(interval == "60_90" & HMMScore >=40 ) |
(interval == "70_100" & HMMScore >=45 )|
(interval == "80_110" & HMMScore >=45 )|
(interval == "90_120" & HMMScore >=40 )|
(interval == "130_160" & HMMScore >=30 )|
(interval == "150_180" & HMMScore >=35 )|
(interval == "160_190" & HMMScore >=30 )|
(interval == "170_200" & HMMScore >=40 )|
(interval == "180_210" & HMMScore >=45 )|
(interval == "190_220" & HMMScore >=40 )|
(interval == "200_230" & HMMScore >=30 )|
(interval == "210_240" & HMMScore >=40 )|
(interval == "220_250" & HMMScore >=40 )|
(interval == "230_260" & HMMScore >=45 )
(interval == "240_270" & HMMScore >=45 ))
# Finalized cutoffs with intervals and cutoffs
OxyN_filtered_final <- cyclaseOxyN_recoded %>% filter((interval == "0_30" & HMMScore>=25)|
(interval == "60_90" & HMMScore >=40 ) |
(interval == "70_100" & HMMScore >=45 )|
(interval == "80_110" & HMMScore >=45 )|
(interval == "90_120" & HMMScore >=40 )|
(interval == "130_160" & HMMScore >=30 )|
(interval == "150_180" & HMMScore >=35 )|
(interval == "160_190" & HMMScore >=30 )|
(interval == "170_200" & HMMScore >=40 )|
(interval == "180_210" & HMMScore >=45 )|
(interval == "190_220" & HMMScore >=40 )|
(interval == "200_230" & HMMScore >=30 )|
(interval == "210_240" & HMMScore >=40 )|
(interval == "220_250" & HMMScore >=40 )|
(interval == "230_260" & HMMScore >=45 |
(interval == "240_270" & HMMScore >=45 ))
#OxyN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
write_tsv( OxyN_filtered_final %>% select(-c(window, interval))%>% group_by(readID,Sample) %>% arrange(desc(HMMScore)) %>% top_n(1, HMMScore) %>% filter(row_number() == 1) %>% ungroup(), "OxyN-final_data-raw.txt", col_names = T)
# Finalized cutoffs with intervals and cutoffs
OxyN_filtered_final <- cyclaseOxyN_recoded %>% filter((interval == "0_30" & HMMScore>=25)|
(interval == "60_90" & HMMScore >=40 ) |
(interval == "70_100" & HMMScore >=45 )|
(interval == "80_110" & HMMScore >=45 )|
(interval == "90_120" & HMMScore >=40 )|
(interval == "130_160" & HMMScore >=30 )|
(interval == "150_180" & HMMScore >=35 )|
(interval == "160_190" & HMMScore >=30 )|
(interval == "170_200" & HMMScore >=40 )|
(interval == "180_210" & HMMScore >=45 )|
(interval == "190_220" & HMMScore >=40 )|
(interval == "200_230" & HMMScore >=30 )|
(interval == "210_240" & HMMScore >=40 )|
(interval == "220_250" & HMMScore >=40 )|
(interval == "230_260" & HMMScore >=45) |
(interval == "240_270" & HMMScore >=45 ))
#OxyN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
write_tsv( OxyN_filtered_final %>% select(-c(window, interval))%>% group_by(readID,Sample) %>% arrange(desc(HMMScore)) %>% top_n(1, HMMScore) %>% filter(row_number() == 1) %>% ungroup(), "OxyN-final_data-raw.txt", col_names = T)
#rename OxyN hmm_unique within the folder to detected_reads
parseReads(OxyN_filtered_final, "cyclaseOxyN", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/revision-synthetic-genomes/read-quantification/OxyN/sample-readIDs-files")
#Function to parse out HMM unique reads for each sample.
parseReads <- function(HMMdf, modelName, dirname){
setwd(dirname)
samples<-unique(HMMdf$Sample)
for (s in 1:length(samples)){
currentSample<-samples[s]
currentSampleResults<- HMMdf %>% filter(Sample == currentSample)
currentSampleReads<- unique(currentSampleResults$readID)
fileName<-paste0(currentSample,paste("-",modelName,"-hmm_unique",sep =""), ".txt", sep ="")
write.table(currentSampleReads,fileName, quote = F, row.names = F, col.names = F )
}
}
#parseReads(remaining_hmm_oxyn_pos_median_check, "cyclaseOxyN", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/revision-synthetic-genomes/HMM-analysis/hmm-unique-analysis/median_score/")
#parseReads(remaining_hmm_oxyn_pos_subfive_check, "cyclaseOxyN", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/revision-synthetic-genomes/HMM-analysis/hmm-unique-analysis/minus_five_score/")
#parseReads(remaining_hmm_oxyn_pos_plusfive_check, "cyclaseOxyN", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/revision-synthetic-genomes/HMM-analysis/hmm-unique-analysis/plus_five_score/")
# Finalized cutoffs with intervals and cutoffs
OxyN_filtered_final <- cyclaseOxyN_recoded %>% filter((interval == "0_30" & HMMScore>=25)|
(interval == "60_90" & HMMScore >=40 ) |
(interval == "70_100" & HMMScore >=45 )|
(interval == "80_110" & HMMScore >=45 )|
(interval == "90_120" & HMMScore >=40 )|
(interval == "130_160" & HMMScore >=30 )|
(interval == "150_180" & HMMScore >=35 )|
(interval == "160_190" & HMMScore >=30 )|
(interval == "170_200" & HMMScore >=40 )|
(interval == "180_210" & HMMScore >=45 )|
(interval == "190_220" & HMMScore >=40 )|
(interval == "200_230" & HMMScore >=30 )|
(interval == "210_240" & HMMScore >=40 )|
(interval == "220_250" & HMMScore >=40 )|
(interval == "230_260" & HMMScore >=45) |
(interval == "240_270" & HMMScore >=45 ))
#OxyN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
write_tsv( OxyN_filtered_final %>% select(-c(window, interval))%>% group_by(readID,Sample) %>% arrange(desc(HMMScore)) %>% top_n(1, HMMScore) %>% filter(row_number() == 1) %>% ungroup(), "OxyN-final_data-raw.txt", col_names = T)
#rename OxyN hmm_unique within the folder to detected_reads
parseReads(OxyN_filtered_final, "cyclaseOxyN", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/revision-synthetic-genomes/read-quantification/OxyN/sample-readIDs-files")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = '/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/revision-synthetic-genomes/HMM-analysis/TcmI')
# load neccessary packages
require(tidyverse)
require(ggsci)
require(ggpubr)
#load TcmI HMM data and recode sampleType for the complexity of the synthetic sample (#of genomes in samples)
cyclase_TcmI <- read_delim("combined-cyclase_TcmI-spHMM-synthetic_genomes-results.txt",col_names = F, delim = "\t")
names(cyclase_TcmI) <- c("readID", "sampleType", "sampleID", "cyclaseType", "HMMScore", "window","interval")
cyclase_TcmI$sampleType[str_detect(cyclase_TcmI$sampleID, "high") ==TRUE] <-"high"
cyclase_TcmI$sampleType[str_detect(cyclase_TcmI$sampleID, "low") ==TRUE] <-"low"
cyclase_TcmI$interval <- factor(cyclase_TcmI$interval,levels = c(
"0_30","10_40","20_50","30_60","40_70","50_80","60_90","70_100","80_110",
"90_120","100_130","110_140","120_150","130_160","140_170","150_180"))
# Function to aggregate identitical sample reads located at different reading frames
# and take the frame with the highest HMM score
formatHMM<-function(hmmdf){
hmmdfRecoded <- separate(hmmdf, readID, into = c("readIDOnly","F_R_read_frame"), sep = "/", extra = "merge")
hmmdfRecoded_FR <- separate(hmmdfRecoded, F_R_read_frame, into = c("F_R","frameNumb"), sep = "_", extra = "merge")
hmmdfRecodedDF<- within(hmmdfRecoded_FR, readID <- paste(readIDOnly,F_R, sep='/'))
hmmdfRecodedDFUnique<-aggregate(HMMScore ~ readID + sampleID + sampleType + cyclaseType + window + interval, hmmdfRecodedDF, max)
colnames(hmmdfRecodedDFUnique)<-c("readID","Sample", "sampleType", "cyclaseType", "window", "interval","HMMScore")
return(hmmdfRecodedDFUnique)
}
#Keep duplicated reads if they are in different reads
cyclaseTcmI_recoded<-formatHMM(cyclase_TcmI)
#BLAST True positive reads mapped to the T2PKS cyclases genes
cyclase_metadata <- read_tsv("../../../HMM-analysis/T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST unfiltered reads at 95% pident no readCoverage filter
all_t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_all-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )
#load cyclases interval positions data
tcmi_positions <- read_tsv("../../../T2PKS-TP-reads/cyclases_genes-interval_position-data.txt",col_names = T)%>% filter(cyclase_type == "TcmI")
filter_blast <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(pos_df)){
gene_data <- pos_df[i,]
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart < gene_data$start & qend > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
if (nrow(interval_df) > 0){
for (j in 1:nrow(interval_df)){
in_interval_count <- sum(interval_df[j,]$qstart:interval_df[j,]$qend %in% gene_data$start:gene_data$end)
interval_count <- length(gene_data$start:gene_data$end)
interval_cov <- (in_interval_count/interval_count) * 100
if (interval_cov >=90){
res_df<-interval_df[j,]
res_df$model_cov <- interval_cov
res_df$interval <- gene_data$interval
results <- rbind(results,res_df)
}
}
}
}
return(results)
}
#Filter BLAST reads that are within the TcmI genes intervals and cover 90% of the model interval
tcmI_blast_intervals<- filter_blast(all_t2pksBlastDF %>% filter(cyclase_type == "TcmI"), tcmi_positions)
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
# remove columns to compare the two dataframe
blastDF <- blast_df %>% select(-c(model_cov, interval))
common_reads <- hmm_df %>% semi_join(.,blastDF)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
cyclaseTcmI_bin <- compare_reads(cyclaseTcmI_recoded, tcmI_blast_intervals)
names(cyclaseTcmI_bin)[names(cyclaseTcmI_bin)=="cyclase_type"] <-"cyclaseType"
#Function to find the hmm_unique reads that are also mapped using BLAST but didn't make 90% interval
compare_hmm_unique <- function(hmm_df, blast_df, pos_df){
#hmm_unique_df <- hmm_df  %>% inner_join(.,blast_df, by = c("readID"="sseqid", "Sample", "sampleType","cyclaseType"= "cyclase_type"))
hmm_unique_df <- hmm_df  %>% inner_join(.,blast_df, by = c("readID"="sseqid", "Sample", "sampleType", "cyclase_type"))
intervals <- unique(hmm_unique_df$interval)
results <- data.frame()
#check that reads are in the same interval to throw out
for (i in 1:length(intervals)){
gene_interval_data <- pos_df %>% filter(interval == intervals[i])
for (k in 1:nrow(gene_interval_data)){
gene_data <- gene_interval_data[k,]
#filters datatframe for edges and internal reads compared to model interval
interval_df  <- hmm_unique_df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
if (nrow(interval_df) > 0 ){
results <- rbind(results,interval_df)
}
}
}
return(results%>% distinct())
}
#Filter OxyN data with cutoffs to compare to BLAST interval reads
TcmI_filtered_median <- cyclaseTcmI_recoded %>% filter((interval == "0_30" & HMMScore>=35)|
(interval == "10_40" & HMMScore >=35)|
(interval == "20_50" & HMMScore >=35)|
(interval == "30_60" & HMMScore >=35)|
(interval == "40_70" & HMMScore >=30 )|
(interval == "50_80" & HMMScore>=30)|
(interval == "60_90" & HMMScore >=25 ) |
(interval == "70_100" & HMMScore >=35 )|
(interval == "80_110" & HMMScore >=40 )|
(interval == "90_120" & HMMScore >=40 ))
TcmI_filtered_median_subfive<- cyclaseTcmI_recoded %>% filter((interval == "0_30" & HMMScore>=30)|
(interval == "10_40" & HMMScore >=30)|
(interval == "20_50" & HMMScore >=30)|
(interval == "30_60" & HMMScore >=30)|
(interval == "40_70" & HMMScore >=25 )|
(interval == "50_80" & HMMScore>=25)|
(interval == "60_90" & HMMScore >=20 ) |
(interval == "70_100" & HMMScore >=30 )|
(interval == "80_110" & HMMScore >=35 )|
(interval == "90_120" & HMMScore >=35 ))
TcmI_filtered_median_plusfive <- cyclaseTcmI_recoded %>% filter((interval == "0_30" & HMMScore>=40)|
(interval == "10_40" & HMMScore >=40)|
(interval == "20_50" & HMMScore >=40)|
(interval == "30_60" & HMMScore >=40)|
(interval == "40_70" & HMMScore >=35 )|
(interval == "50_80" & HMMScore>=35)|
(interval == "60_90" & HMMScore >=30 ) |
(interval == "70_100" & HMMScore >=40 )|
(interval == "80_110" & HMMScore >=45 )|
(interval == "90_120" & HMMScore >=45 ))
#return the hmm-unique reads
return_hmm_unique <- function(hmm_df, blast_df){
oxyn_hmm_df <- hmm_df  %>% select(-c(window))
oxyn_hmm_df$interval <- as.character(oxyn_hmm_df$interval)
names(oxyn_hmm_df)[names(oxyn_hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
OxyN_hmm_unique <- oxyn_hmm_df %>% anti_join(.,blast_df, by= c("readID", "Sample", "sampleType", "interval"))
return(OxyN_hmm_unique)
}
median_tcmI_hmmunique <-return_hmm_unique(TcmI_filtered_median, tcmI_blast_intervals)
median_TcmI_hmmunique_less_model_cov<-compare_hmm_unique(median_tcmI_hmmunique,all_t2pksBlastDF,tcmi_positions )
median_remaining_hmm_tcmi<- median_tcmI_hmmunique %>% anti_join(.,median_TcmI_hmmunique_less_model_cov)
table(median_remaining_hmm_tcmi$interval)
pks_genomes_median_check <- c("JOFH01000019.1", "gi|529222834|ref|NC_021985.1|", "gi|640932211|gb|JJOH01000028.1|", "AZXI01000013.1")
#median_remaining_hmm_tcmi %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
remaining_hmm_tcmi_pos_median_check <- median_remaining_hmm_tcmi %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_median_check)
############################################################################################################################
subfive_tcmI_hmmunique <-return_hmm_unique(TcmI_filtered_median_subfive, tcmI_blast_intervals)
subfive_TcmI_hmmunique_less_model_cov<-compare_hmm_unique(subfive_tcmI_hmmunique,all_t2pksBlastDF,tcmi_positions )
subfive_remaining_hmm_tcmi<- subfive_tcmI_hmmunique %>% anti_join(.,subfive_TcmI_hmmunique_less_model_cov)
table(subfive_remaining_hmm_tcmi$interval)
#subfive_remaining_hmm_tcmi %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_subfive_check <- c("JOFH01000019.1","AZXI01000002.1", "AZXI01000013.1", "gi|529222834|ref|NC_021985.1|", "gi|928416322|gb|LGKI01000367.1|", "gi|928421279|gb|LGKI01000002.1|", "AZXI01000034.1", "AZXI01000009.1", "AZXI01000040.1", "AZXI01000048.1", "gi|640932211|gb|JJOH01000028.1|")
remaining_hmm_tcmi_pos_subfive_check <- subfive_remaining_hmm_tcmi %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_subfive_check)
###############################################################################################################################################
plusfive_tcmI_hmmunique <-return_hmm_unique(TcmI_filtered_median_plusfive, tcmI_blast_intervals)
plusfive_TcmI_hmmunique_less_model_cov<-compare_hmm_unique(plusfive_tcmI_hmmunique,all_t2pksBlastDF,tcmi_positions )
plusfive_remaining_hmm_tcmi<- plusfive_tcmI_hmmunique %>% anti_join(.,plusfive_TcmI_hmmunique_less_model_cov)
table(plusfive_remaining_hmm_tcmi$interval)
#plusfive_remaining_hmm_tcmi %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_plusfive_check <- c("gi|529222834|ref|NC_021985.1|", "JOFH01000019.1", "AZXI01000013.1")
remaining_hmm_tcmi_pos_plusfive_check <- plusfive_remaining_hmm_tcmi %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_plusfive_check)
calculate_F1 <- function(hmm_df, hmm_fp, blast_df, intervals){
#added this because factor vector
hmm_df$interval <- as.character(hmm_df$interval)
hmm_df <- hmm_df %>% select(-c(window))
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
results<-data.frame(interval=character(), F1=numeric())
for (i in 1:length(intervals)){
model <- intervals[i]
model_hmm <- hmm_df %>% filter(interval== model) # filter out model HMM results
model_blast <- blast_df %>% filter(interval== model)
model_hmm_fp <-hmm_fp %>% filter(interval== model)
TP <- model_hmm %>% inner_join(.,model_blast) %>% nrow()
FP <- model_hmm_fp %>% nrow()
FN <- model_blast %>% anti_join(.,model_hmm) %>% nrow()
F1_metric <- (2*TP)/((2*TP)+FP+FN)
row <- data.frame(cbind(model, F1_metric))
results<- results %>% add_row(interval = model, F1 = F1_metric)
}
return(results)
}
# Remove reads that map back to the domains at the interval but failed at either BLAST pident or interval coverage or both
remove_tcmI_reads_subfive <- data.frame(
readID = c("AZXI01000013.1-603354/2", "AZXI01000013.1-406040/2", "AZXI01000013.1-86374/2", "gi|529222834|ref|NC_021985.1|-5018698/1", "JOFH01000019.1-409906/2", "JOFH01000019.1-162234/2"),
Sample = c("synthetic_stool_low_S51", "synthetic_stool_low_S51", "synthetic_stool_low_S51", "synthetic_stool_low_S51", "synthetic_stool_low_S64", "synthetic_stool_low_S64"))
subfive_false_postives <- subfive_remaining_hmm_tcmi %>% anti_join(.,remove_tcmI_reads_subfive)
remove_tcmI_reads_median <- data.frame(
readID = c("AZXI01000013.1-603354/2", "AZXI01000013.1-406040/2", "AZXI01000013.1-86374/2", "gi|529222834|ref|NC_021985.1|-5018698/1", "JOFH01000019.1-409906/2", "JOFH01000019.1-162234/2"),
Sample = c("synthetic_stool_low_S51", "synthetic_stool_low_S51", "synthetic_stool_low_S51", "synthetic_stool_low_S51", "synthetic_stool_low_S64", "synthetic_stool_low_S64"))
median_false_postives <- median_remaining_hmm_tcmi %>% anti_join(.,remove_tcmI_reads_median)
remove_tcmI_reads_plusfive <- data.frame(
readID = c("gi|529222834|ref|NC_021985.1|-5018698/1", "JOFH01000019.1-162234/2"),
Sample = c("synthetic_stool_low_S51", "synthetic_stool_low_S64"))
plusfive_false_postives <- plusfive_remaining_hmm_tcmi %>% anti_join(.,remove_tcmI_reads_plusfive)
tcmi_f1_cutoff_median<- calculate_F1(TcmI_filtered_median, median_false_postives, tcmI_blast_intervals, unique(cyclaseTcmI_recoded$interval))
tcmi_f1_cutoff_median$cutoff<- "median"
tcmi_f1_cutoff_plusfive<- calculate_F1(TcmI_filtered_median_plusfive, plusfive_false_postives, tcmI_blast_intervals, unique(cyclaseTcmI_recoded$interval))
tcmi_f1_cutoff_plusfive$cutoff<- "+5"
tcmi_f1_cutoff_subfive<- calculate_F1(TcmI_filtered_median_subfive, subfive_false_postives, tcmI_blast_intervals, unique(cyclaseTcmI_recoded$interval))
tcmi_f1_cutoff_subfive$cutoff<- "-5"
tcmi_f1_df <- rbind(tcmi_f1_cutoff_median,tcmi_f1_cutoff_plusfive,tcmi_f1_cutoff_subfive )
# Finalized cutoffs with intervals and cutoffs
TcmI_filtered_final <- cyclaseTcmI_recoded %>% filter((interval == "0_30" & HMMScore>=30)|
(interval == "10_40" & HMMScore >=30)|
(interval == "20_50" & HMMScore >=30)|
(interval == "30_60" & HMMScore >=30)|
(interval == "40_70" & HMMScore >=25 )|
(interval == "60_90" & HMMScore >=20 ) |
(interval == "70_100" & HMMScore >=30 )|
(interval == "80_110" & HMMScore >=35 )|
(interval == "90_120" & HMMScore >=35 ))
#TcmI_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
#write_tsv( TcmI_filtered_final %>% select(-c(window, interval))%>% group_by(readID,Sample) %>% arrange(desc(HMMScore)) %>% top_n(1, HMMScore) %>% filter(row_number() == 1) %>% ungroup(), "TcmI-final_data-raw.txt", col_names = T)
#rename TcmI hmm_unique within the folder to detected_reads
#parseReads(TcmI_filtered_final, "cyclaseTcmI", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/revision-synthetic-genomes/read-quantification/TcmI/sample-readIDs-files")
TcmI_filtered_final_distinct <- TcmI_filtered_final %>% arrange(desc(HMMScore)) %>% group_by(readID, Sample) %>% top_n(1) %>%
filter(row_number()==1) %>% ungroup()
TcmI_filtered_final_distinct$interval <-as.character(TcmI_filtered_final_distinct$interval)
names(TcmI_filtered_final_distinct)[names(TcmI_filtered_final_distinct)=="cyclaseType"] <-"cyclase_type"
results_common<-TcmI_filtered_final_distinct %>% inner_join(., tcmI_blast_intervals, by = c("readID" = "sseqid", "Sample", "sampleType", "interval", "cyclase_type")) %>% select(-c(model_cov))
results_hmm_unique<-TcmI_filtered_final_distinct %>% anti_join(., tcmI_blast_intervals, by = c("readID" = "sseqid", "Sample", "sampleType", "interval", "cyclase_type"))
results_hmm_unique_TP<-compare_hmm_unique(results_hmm_unique,all_t2pksBlastDF,tcmi_positions )
results_hmm_unique_FP <- results_hmm_unique %>% anti_join(.,results_hmm_unique_TP)
TcmI_filtered_final_distinct_TPs <- rbind(results_common, results_hmm_unique_TP) %>% select(-c(8:10,12:17))
combined_TcmI_results <- TcmI_filtered_final_distinct_TPs %>% full_join(., results_hmm_unique_FP )
write_tsv(combined_TcmI_results,"TcmI-final_models-data.txt",col_names = T)
