interval_df <- rbind(interval_df_1,interval_df_2)
}
return(interval_df)
}
median_blast_df <- blast_hmm_unique %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
test<- filter_hmm_unique(head(median_blast_df),tcmn_positions)
head(test)
head(test)
head(median_blast_df)
head(median_blast_df) %>% as.data.frame()
test<- filter_hmm_unique(median_blast_df,tcmn_positions)
dim(test)
head(test)
tcmn_positions
median_blast_df %>% filter(sseqid== "JJOH01000002.1__S.olindensis_strain_DAUFPE_5622_Cosmomycin__DF19_23455")
median_blast_df %>% distinct(sseqid, interval)
head(tcmn_positions)
filter_hmm_unique  <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(df)){
blast_data <- df[i,]
domain <- blast_data$sseqid
domain_interval <- blast_data$interval
gene_data <- pos_df %>% filter( gene_name == domain  & interval == domain_interval)
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- blast_data %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart %in% gene_data$start:gene_data$end | send %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart < gene_data$start & send > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
}
return(interval_df)
}
test<- filter_hmm_unique(head(median_blast_df),tcmn_positions %>% filter())
head(test)
test
test<- filter_hmm_unique(median_blast_df,tcmn_positions)
head(test)
dim(test)
test
test %>% as.data.frame()
filter_hmm_unique  <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(df)){
blast_data <- df[i,]
domain <- blast_data$sseqid
domain_interval <- blast_data$interval
gene_data <- pos_df %>% filter( gene_name == domain  & interval == domain_interval)
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- blast_data %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart %in% gene_data$start:gene_data$end | send %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart < gene_data$start & send > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
}
return(interval_df)
}
median_blast_df <- blast_hmm_unique %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
test<- filter_hmm_unique(median_blast_df,tcmn_positions)
unique(median_blast_df$qseqid)
unique(median_blast_df$qseqid) %>% length()
subfive_blast_df <- blast_hmm_unique %>% inner_join(., remaining_hmm_tcmn_pos_subfive_check, by = c("qseqid" = "readID", "Sample"))
test<-filter_hmm_unique(subfive_blast_df,tcmn_positions)
dim(test)
head(test)
subfive_blast_df
unique(subfive_blast_df$qseqid) %>% length()
test<- filter_hmm_unique(median_blast_df,tcmn_positions)
test
test %>% as.data.frame()
subfive_blast_df %>% filter(qseqid == "gi|529222834|ref|NC_021985.1|-10672/2" & interval == "160_190")
remaining_hmm_tcmn_pos_subfive_check %>% filter(qseqid == "gi|529222834|ref|NC_021985.1|-10672/2" & interval == "160_190")
remaining_hmm_tcmn_pos_subfive_check %>% filter(readID == "gi|529222834|ref|NC_021985.1|-10672/2" & interval == "160_190")
remaining_hmm_tcmn_pos_subfive_check %>% filter(readID == "gi|529222834|ref|NC_021985.1|-10672/2" & Sample == "synthetic_stool_high_S15")
head()
head(median_blast_df)
#load TcmN HMM data and recode sampleType for the complexity of the synthetic sample (#of genomes in samples)
cyclase_TcmN <- read_delim("combined-cyclase_TcmN-spHMM-synthetic_genomes-results.txt",col_names = F, delim = "\t") %>% filter( X7 %in% c("150_180", "160_190","170_200", "180_210","190_220", "200_230", "210_240", "220_250", "230_260",
"240_270", "250_280", "250_280", "260_290", "270_300", "280_310", "290_320", "300_330", "310_340"))
names(cyclase_TcmN) <- c("readID", "sampleType", "sampleID", "cyclaseType", "HMMScore", "window","interval")
cyclase_TcmN$sampleType[str_detect(cyclase_TcmN$sampleID, "high") ==TRUE] <-"high"
cyclase_TcmN$sampleType[str_detect(cyclase_TcmN$sampleID, "low") ==TRUE] <-"low"
cyclase_TcmN$interval <- factor(cyclase_TcmN$interval,levels = c("150_180", "160_190",
"170_200", "180_210","190_220", "200_230", "210_240", "220_250", "230_260",
"240_270", "250_280", "260_290", "270_300", "280_310", "290_320", "300_330", "310_340"))
# Function to aggregate identitical sample reads located at different reading frames
# and take the frame with the highest HMM score
formatHMM<-function(hmmdf){
hmmdfRecoded <- separate(hmmdf, readID, into = c("readIDOnly","F_R_read_frame"), sep = "/", extra = "merge")
hmmdfRecoded_FR <- separate(hmmdfRecoded, F_R_read_frame, into = c("F_R","frameNumb"), sep = "_", extra = "merge")
hmmdfRecodedDF<- within(hmmdfRecoded_FR, readID <- paste(readIDOnly,F_R, sep='/'))
hmmdfRecodedDFUnique<-aggregate(HMMScore ~ readID + sampleID + sampleType + cyclaseType + window + interval, hmmdfRecodedDF, max)
colnames(hmmdfRecodedDFUnique)<-c("readID","Sample", "sampleType", "cyclaseType", "window", "interval","HMMScore")
return(hmmdfRecodedDFUnique)
}
#Keep duplicated reads if they are in different reads
cyclaseTcmN_recoded<-formatHMM(cyclase_TcmN)
#BLAST True positive reads mapped to the T2PKS cyclases genes
cyclase_metadata <- read_tsv("../T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST unfiltered reads at 95% pident no readCoverage filter
all_t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_all-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )
#load cyclases interval positions data
tcmn_positions <- read_tsv("../../T2PKS-TP-reads/cyclases_genes-interval_position-data.txt",col_names = T) %>% filter(cyclase_type == "TcmN")
filter_blast <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(pos_df)){
gene_data <- pos_df[i,]
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart < gene_data$start & qend > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
if (nrow(interval_df) > 0){
for (j in 1:nrow(interval_df)){
in_interval_count <- sum(interval_df[j,]$qstart:interval_df[j,]$qend %in% gene_data$start:gene_data$end)
interval_count <- length(gene_data$start:gene_data$end)
interval_cov <- (in_interval_count/interval_count) * 100
if (interval_cov >=90){
res_df<-interval_df[j,]
res_df$model_cov <- interval_cov
res_df$interval <- gene_data$interval
results <- rbind(results,res_df)
}
}
}
}
return(results)
}
#Filter BLAST reads that are within the TcmN genes intervals and cover 90% of the model interval
tcmN_blast_intervals<- filter_blast(all_t2pksBlastDF %>% filter(cyclase_type == "TcmN"), tcmn_positions)
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
# remove columns to compare the two dataframe
blastDF <- blast_df %>% select(-c(model_cov, interval))
common_reads <- hmm_df %>% semi_join(.,blastDF)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
cyclaseTcmN_bin <- compare_reads(cyclaseTcmN_recoded, tcmN_blast_intervals)
names(cyclaseTcmN_bin)[names(cyclaseTcmN_bin)=="cyclase_type"] <-"cyclaseType"
#Function to find the hmm_unique reads that are also mapped using BLAST but didn't make 90% interval
compare_hmm_unique <- function(hmm_df, blast_df, pos_df){
#hmm_unique_df <- hmm_df  %>% inner_join(.,blast_df, by = c("readID"="sseqid", "Sample", "sampleType","cyclaseType"= "cyclase_type"))
hmm_unique_df <- hmm_df  %>% inner_join(.,blast_df, by = c("readID"="sseqid", "Sample", "sampleType", "cyclase_type"))
intervals <- unique(hmm_unique_df$interval)
results <- data.frame()
#check that reads are in the same interval to throw out
for (i in 1:length(intervals)){
gene_interval_data <- pos_df %>% filter(interval == intervals[i])
for (k in 1:nrow(gene_interval_data)){
gene_data <- gene_interval_data[k,]
#filters datatframe for edges and internal reads compared to model interval
interval_df  <- hmm_unique_df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
if (nrow(interval_df) > 0 ){
results <- rbind(results,interval_df)
}
}
}
return(results%>% distinct())
}
TcmN_filtered_median <- cyclaseTcmN_recoded %>% filter((interval == "150_180" & HMMScore >=30 )|
(interval == "160_190" & HMMScore >=30 )|
(interval == "170_200" & HMMScore >=30 )|
(interval == "180_210" & HMMScore >=25 )|
(interval == "190_220" & HMMScore >=20 )|
(interval == "200_230" & HMMScore >=20 )|
(interval == "210_240" & HMMScore >=30 )|
(interval == "220_250" & HMMScore >=30 )|
(interval == "230_260" & HMMScore >=30 )|
(interval == "240_270" & HMMScore >=30 )|
(interval == "250_280" & HMMScore >=30 )|
(interval == "260_290" & HMMScore >=30 )|
(interval == "270_300" & HMMScore >=25 )|
(interval == "280_310" & HMMScore >=25 )|
(interval == "290_320" & HMMScore >=25 )|
(interval == "300_330" & HMMScore >=25 )|
(interval == "310_340" & HMMScore >=25 ))
TcmN_filtered_median_subfive <- cyclaseTcmN_recoded %>% filter((interval == "150_180" & HMMScore >=25 )|
(interval == "160_190" & HMMScore >=25 )|
(interval == "170_200" & HMMScore >=25 )|
(interval == "180_210" & HMMScore >=20 )|
(interval == "190_220" & HMMScore >=15 )|
(interval == "200_230" & HMMScore >=15 )|
(interval == "210_240" & HMMScore >=25 )|
(interval == "220_250" & HMMScore >=25 )|
(interval == "230_260" & HMMScore >=25 )|
(interval == "240_270" & HMMScore >=25 )|
(interval == "250_280" & HMMScore >=25 )|
(interval == "260_290" & HMMScore >=25 )|
(interval == "270_300" & HMMScore >=20 )|
(interval == "280_310" & HMMScore >=20 )|
(interval == "290_320" & HMMScore >=20 )|
(interval == "300_330" & HMMScore >=20 )|
(interval == "310_340" & HMMScore >=20 ))
TcmN_filtered_median_plusfive <- cyclaseTcmN_recoded %>% filter((interval == "150_180" & HMMScore >=35 )|
(interval == "160_190" & HMMScore >=35 )|
(interval == "170_200" & HMMScore >=35 )|
(interval == "180_210" & HMMScore >=30 )|
(interval == "190_220" & HMMScore >=25 )|
(interval == "200_230" & HMMScore >=25 )|
(interval == "210_240" & HMMScore >=35 )|
(interval == "220_250" & HMMScore >=35 )|
(interval == "230_260" & HMMScore >=35 )|
(interval == "240_270" & HMMScore >=35 )|
(interval == "250_280" & HMMScore >=35 )|
(interval == "260_290" & HMMScore >=35 )|
(interval == "270_300" & HMMScore >=30 )|
(interval == "280_310" & HMMScore >=30 )|
(interval == "290_320" & HMMScore >=30 )|
(interval == "300_330" & HMMScore >=30 )|
(interval == "310_340" & HMMScore >=30 ))
return_hmm_unique <- function(hmm_df, blast_df){
oxyn_hmm_df <- hmm_df  %>% select(-c(window))
oxyn_hmm_df$interval <- as.character(oxyn_hmm_df$interval)
names(oxyn_hmm_df)[names(oxyn_hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
OxyN_hmm_unique <- oxyn_hmm_df %>% anti_join(.,blast_df, by= c("readID", "Sample", "sampleType", "interval"))
return(OxyN_hmm_unique)
}
median_tcmN_hmmunique <-return_hmm_unique(TcmN_filtered_median, tcmN_blast_intervals)
median_TcmN_hmmunique_less_model_cov<-compare_hmm_unique(median_tcmN_hmmunique,all_t2pksBlastDF,tcmn_positions )
median_remaining_hmm_tcmn<- median_tcmN_hmmunique %>% anti_join(.,median_TcmN_hmmunique_less_model_cov)
table(median_remaining_hmm_tcmn$interval)
median_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_median_check <- c("gi|529222834|ref|NC_021985.1|", "gi|640937269|gb|JJOH01000002.1|", "JOFH01000011.1", "gi|1081600317|emb|FMWJ01000012.1|", "AZXI01000002.1")
#median_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
remaining_hmm_tcmn_pos_median_check <- median_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_median_check)
subfive_tcmN_hmmunique <-return_hmm_unique(TcmN_filtered_median_subfive, tcmN_blast_intervals)
subfive_TcmN_hmmunique_less_model_cov<-compare_hmm_unique(subfive_tcmN_hmmunique,all_t2pksBlastDF,tcmn_positions )
subfive_remaining_hmm_tcmn<- subfive_tcmN_hmmunique %>% anti_join(.,subfive_TcmN_hmmunique_less_model_cov)
table(subfive_remaining_hmm_tcmn$interval)
#subfive_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_subfive_check <- c(" gi|529222834|ref|NC_021985.1|", "JOFH01000019.1", "gi|640937269|gb|JJOH01000002.1|", "JOFH01000011.1", "gi|1081600317|emb|FMWJ01000012.1|", "AZXI01000002.1", "gi|1081601449|emb|FMWJ01000005.1|")
remaining_hmm_tcmn_pos_subfive_check <- subfive_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_subfive_check)
plusfive_tcmN_hmmunique <-return_hmm_unique(TcmN_filtered_median_plusfive, tcmN_blast_intervals)
plusfive_TcmN_hmmunique_less_model_cov<-compare_hmm_unique(plusfive_tcmN_hmmunique,all_t2pksBlastDF,tcmn_positions )
plusfive_remaining_hmm_tcmn<- plusfive_tcmN_hmmunique %>% anti_join(.,plusfive_TcmN_hmmunique_less_model_cov)
table(plusfive_remaining_hmm_tcmn$interval)
#plusfive_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_plusfive_check <- c("gi|640937269|gb|JJOH01000002.1|", "gi|529222834|ref|NC_021985.1|")
remaining_hmm_tcmn_pos_plusfive_check <- plusfive_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_plusfive_check)
blast_hmm_unique <- read_tsv("/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/HMM-analysis/TcmN/hmm-unique-analysis/TcmN_hmm-unique_blast-results.txt", col_names = T)
head(blast_hmm_unique)
table(blast_hmm_unique$cutoff)
median_blast_df <- blast_hmm_unique %>% filter(cutoff== "median_score") %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
dim(remaining_hmm_tcmn_pos_median_check)
distinct(readID, Sample) %>% count()
remaining_hmm_tcmn_pos_median_check %>% distinct(readID, Sample) %>% count()
blast_hmm_unique %>% filter(cutoff== "median_score") %>% distinct(sseqid, Sample) %>% count()
blast_hmm_unique %>% filter(cutoff== "median_score") %>% distinct(sseqid, Sample) %>% head()
blast_hmm_unique %>% filter(cutoff== "median_score") %>% distinct(qseqid, Sample) %>% head()
blast_hmm_unique %>% filter(cutoff== "median_score") %>% distinct(qseqid, Sample) %>% count()
median_blast_df <- blast_hmm_unique %>% filter(cutoff== "median_score") %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
head(median_blast_df)
dim(median_blast_df)
dim(blast_hmm_unique)
dim(blast_hmm_unique %>% filter(cutoff== "median_score"))
median_blast_df <- blast_hmm_unique %>% filter(cutoff== "median_score") %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
median_blast_df
tail(median_blast_df)
is.na(median_blast_df)
is.na(median_blast_df)== TRUE
subset(is.na(median_blast_df) ==TRUE)
ls
head(median_blast_df)
median_blast_df %>% as.data.frame() %>% head(n=50)
filter_hmm_unique  <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(df)){
blast_data <- df[i,]
domain <- blast_data$sseqid
domain_interval <- blast_data$interval
gene_data <- pos_df %>% filter( gene_name == domain  & interval == domain_interval)
print(domain_interval,domain)
print(gene_data)
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- blast_data %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart %in% gene_data$start:gene_data$end | send %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart < gene_data$start & send > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
}
return(interval_df)
}
filter_hmm_unique(head(median_blast_df),tcmn_positions)
filter_hmm_unique  <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(df)){
blast_data <- df[i,]
domain <- blast_data$sseqid
domain_interval <- blast_data$interval
gene_data <- pos_df %>% filter( gene_name == domain  & interval == domain_interval)
cat(domain_interval,domain)
cat(gene_data)
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- blast_data %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart %in% gene_data$start:gene_data$end | send %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart < gene_data$start & send > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
}
return(interval_df)
}
filter_hmm_unique(head(median_blast_df),tcmn_positions)
filter_hmm_unique  <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(df)){
blast_data <- df[i,]
domain <- blast_data$sseqid
domain_interval <- blast_data$interval
gene_data <- pos_df %>% filter( gene_name == domain  & interval == domain_interval)
cat(domain_interval,domain)
print(gene_data)
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- blast_data %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart %in% gene_data$start:gene_data$end | send %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart < gene_data$start & send > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
}
return(interval_df)
}
filter_hmm_unique(head(median_blast_df),tcmn_positions)
head(median_blast_df)
blast_hmm_unique <- read_tsv("/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/HMM-analysis/TcmN/hmm-unique-analysis/TcmN_hmm-unique_blast-results.txt", col_names = T)
filter_hmm_unique  <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(df)){
blast_data <- df[i,]
domain <- blast_data$sseqid
domain_interval <- blast_data$interval
gene_data <- pos_df %>% filter( gene_name == domain  & interval == domain_interval)
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- blast_data %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart %in% gene_data$start:gene_data$end | send %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(sseqid ==gene_data$gene_name) %>%
filter(sstart < gene_data$start & send > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
}
return(interval_df)
}
median_blast_df <- blast_hmm_unique %>% filter(cutoff== "median_score") %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
median_blast_df <- blast_hmm_unique %>% filter(cutoff== "median_score") %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
subfive_blast_df <- blast_hmm_unique %>% filter(cutoff== "minus_five_score") %>% inner_join(., remaining_hmm_tcmn_pos_subfive_check, by = c("qseqid" = "readID", "Sample"))
test<- filter_hmm_unique(median_blast_df,tcmn_positions)
test
test %>% as.data.frame()
filter_hmm_unique(subfive_blast_df,tcmn_positions)
filter_hmm_unique(subfive_blast_df,tcmn_positions) %>% as.data.frame()
remaining_hmm_tcmn_pos_subfive_check %>% filter(readID == "gi|529222834|ref|NC_021985.1|-10672/2")
median_remaining_hmm_tcmn %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
median_remaining_hmm_tcmn %>% filter(readID == "gi|529222834|ref|NC_021985.1|-10672/2")
median_remaining_hmm_tcmn %>% filter(readID == "JOFH01000019.1-21136/2 ")
median_remaining_hmm_tcmn %>% filter(readID == "JOFH01000019.1-21136/2")
plusfive_blast_df <- blast_hmm_unique %>% filter(cutoff== "plus_five_score") %>% inner_join(., remaining_hmm_tcmn_pos_plusfive_check, by = c("qseqid" = "readID", "Sample"))
test<-filter_hmm_unique(plusfive_blast_df,tcmn_positions)
test
test
plusfive_blast_df
plusfive_blast_df %>% as.data.frame()
blast_hmm_unique %>% filter(cutoff== "plus_five_score")
blast_hmm_unique %>% filter(cutoff== "plus_five_score") %>% head(.)
rm(test)
5 %in 5:10
5 %in% 5:10
median_blast_df <- blast_hmm_unique %>% filter(cutoff== "median_score") %>% inner_join(., remaining_hmm_tcmn_pos_median_check, by = c("qseqid" = "readID", "Sample"))
subfive_blast_df <- blast_hmm_unique %>% filter(cutoff== "minus_five_score") %>% inner_join(., remaining_hmm_tcmn_pos_subfive_check, by = c("qseqid" = "readID", "Sample"))
plusfive_blast_df <- blast_hmm_unique %>% filter(cutoff== "plus_five_score") %>% inner_join(., remaining_hmm_tcmn_pos_plusfive_check, by = c("qseqid" = "readID", "Sample"))
filter_hmm_unique(median_blast_df,tcmn_positions)
filter_hmm_unique(subfive_blast_df,tcmn_positions)
filter_hmm_unique(plusfive_blast_df,tcmn_positions)
filter_hmm_unique(median_blast_df,tcmn_positions) %>% as.data.frame()
filter_hmm_unique(subfive_blast_df,tcmn_positions) %>% as.data.frame()
filter_hmm_unique(plusfive_blast_df,tcmn_positions) %>% as.data.frame()
calculate_F1 <- function(hmm_df, hmm_fp, blast_df, intervals){
#added this because factor vector
hmm_df$interval <- as.character(hmm_df$interval)
hmm_df <- hmm_df %>% select(-c(window))
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
results<-data.frame(interval=character(), F1=numeric())
for (i in 1:length(intervals)){
model <- intervals[i]
model_hmm <- hmm_df %>% filter(interval== model) # filter out model HMM results
model_blast <- blast_df %>% filter(interval== model)
model_hmm_fp <-hmm_fp %>% filter(interval== model)
TP <- model_hmm %>% inner_join(.,model_blast) %>% nrow()
FP <- model_hmm_fp %>% nrow()
FN <- model_blast %>% anti_join(.,model_hmm) %>% nrow()
F1_metric <- (2*TP)/((2*TP)+FP+FN)
row <- data.frame(cbind(model, F1_metric))
results<- results %>% add_row(interval = model, F1 = F1_metric)
}
return(results)
}
remove_tcmN_reads_subfive  <- c("JOFH01000019.1-21136/2")
remove_tcmN_reads_median  <- c("gi|529222834|ref|NC_021985.1|-10672/2")
subfive_false_postives <- subfive_remaining_hmm_tcmN %>% filter(!readID %in% remove_tcmN_reads_subfive)
calculate_F1 <- function(hmm_df, hmm_fp, blast_df, intervals){
#added this because factor vector
hmm_df$interval <- as.character(hmm_df$interval)
hmm_df <- hmm_df %>% select(-c(window))
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
results<-data.frame(interval=character(), F1=numeric())
for (i in 1:length(intervals)){
model <- intervals[i]
model_hmm <- hmm_df %>% filter(interval== model) # filter out model HMM results
model_blast <- blast_df %>% filter(interval== model)
model_hmm_fp <-hmm_fp %>% filter(interval== model)
TP <- model_hmm %>% inner_join(.,model_blast) %>% nrow()
FP <- model_hmm_fp %>% nrow()
FN <- model_blast %>% anti_join(.,model_hmm) %>% nrow()
F1_metric <- (2*TP)/((2*TP)+FP+FN)
row <- data.frame(cbind(model, F1_metric))
results<- results %>% add_row(interval = model, F1 = F1_metric)
}
return(results)
}
remove_tcmN_reads_subfive  <- c("JOFH01000019.1-21136/2")
remove_tcmN_reads_median  <- c("gi|529222834|ref|NC_021985.1|-10672/2")
subfive_false_postives <- subfive_remaining_hmm_tcmn %>% filter(!readID %in% remove_tcmN_reads_subfive)
median_false_postives <- median_remaining_hmm_tcmn %>% filter(!readID %in% remove_tcmN_reads_median)
tcmn_f1_cutoff_median <- calculate_F1(TcmN_filtered_median, median_false_postives, tcmN_blast_intervals,
unique(cyclaseTcmN_recoded$interval))
tcmn_f1_cutoff_median$cutoff<- "median"
tcmn_f1_cutoff_plusfive<- calculate_F1(TcmN_filtered_median_plusfive, plusfive_remaining_hmm_tcmn, tcmN_blast_intervals, unique(cyclaseTcmN_recoded$interval))
tcmn_f1_cutoff_plusfive$cutoff<- "+5"
tcmn_f1_cutoff_subfive<- calculate_F1(TcmN_filtered_median_subfive, subfive_false_postives, tcmN_blast_intervals, unique(cyclaseTcmN_recoded$interval))
tcmn_f1_cutoff_subfive$cutoff<- "-5"
tcmn_f1_df <- rbind(tcmn_f1_cutoff_median,tcmn_f1_cutoff_plusfive,tcmn_f1_cutoff_subfive )
supp_fig_tcmN_f1 <-ggplot(data = tcmn_f1_df, mapping = aes(x = interval, y = F1, group= cutoff, colour=cutoff )) + geom_point()+
geom_line() +  geom_hline(yintercept=.50, linetype="dashed",
color = "red", size=1) + theme_pubclean() +  scale_color_npg(name="HMM Score Cutoff",
labels=c("-5", "median", "+5"))
supp_fig_tcmN_f1
final_ggplot_tcmN<- tcmn_f1_df %>% group_by(interval) %>% top_n(1, F1) %>% ungroup() %>% ggplot(., mapping = aes(x = interval, y = F1, group= 1 )) + geom_point()+
geom_line() +  geom_hline(yintercept=.50, linetype="dashed",
color = "red", size=1) + theme_pubclean()+ scale_color_npg()
final_ggplot_tcmN
supp_fig_tcmN_f1
subfive_false_postives
nrow(subfive_false_postives)
subfive_false_postives %>% distinct(readID, Sample) %>% nrow()
subfive_false_postives %>% distinct(readID, Sample) %>% count()
subfive_false_postives %>% group(interval) %>% distinct(readID, Sample) %>% count()
subfive_false_postives %>% group_by(interval) %>% distinct(readID, Sample) %>% count()
vals and cutoffs
TcmN_filtered_final <- cyclaseTcmN_recoded %>% filter((interval == "150_180" & HMMScore>=25)|
(interval == "160_190" & HMMScore>=25)|
(interval == "170_200" & HMMScore >=25 ) |
(interval == "180_210" & HMMScore >=20 )|
(interval == "210_240" & HMMScore >=25 )|
(interval == "220_250" & HMMScore >=25 )|
(interval == "230_260" & HMMScore >=25 )|
(interval == "240_270" & HMMScore >=25 )|
(interval == "250_280" & HMMScore >=35 )|
(interval == "260_290" & HMMScore >=25 ))
TcmN_filtered_final <- cyclaseTcmN_recoded %>% filter((interval == "150_180" & HMMScore>=25)|
(interval == "160_190" & HMMScore>=25)|
(interval == "170_200" & HMMScore >=25 ) |
(interval == "180_210" & HMMScore >=20 )|
(interval == "210_240" & HMMScore >=25 )|
(interval == "220_250" & HMMScore >=25 )|
(interval == "230_260" & HMMScore >=25 )|
(interval == "240_270" & HMMScore >=25 )|
(interval == "250_280" & HMMScore >=35 )|
(interval == "260_290" & HMMScore >=25 ))
#TcmN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
#rename TcmN hmm_unique within the folder to detected_reads
parseReads(TcmN_filtered_final, "cyclaseTcmN", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/read-quantification/TcmN/sample-readIDs-files")
parseReads <- function(HMMdf, modelName, dirname){
setwd(dirname)
samples<-unique(HMMdf$Sample)
for (s in 1:length(samples)){
currentSample<-samples[s]
currentSampleResults<- HMMdf %>% filter(Sample == currentSample)
currentSampleReads<- unique(currentSampleResults$readID)
fileName<-paste0(currentSample,paste("-",modelName,"-hmm_unique",sep =""), ".txt", sep ="")
write.table(currentSampleReads,fileName, quote = F, row.names = F, col.names = F )
}
}
TcmN_filtered_final <- cyclaseTcmN_recoded %>% filter((interval == "150_180" & HMMScore>=25)|
(interval == "160_190" & HMMScore>=25)|
(interval == "170_200" & HMMScore >=25 ) |
(interval == "180_210" & HMMScore >=20 )|
(interval == "210_240" & HMMScore >=25 )|
(interval == "220_250" & HMMScore >=25 )|
(interval == "230_260" & HMMScore >=25 )|
(interval == "240_270" & HMMScore >=25 )|
(interval == "250_280" & HMMScore >=35 )|
(interval == "260_290" & HMMScore >=25 ))
#TcmN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
#rename TcmN hmm_unique within the folder to detected_reads
parseReads(TcmN_filtered_final, "cyclaseTcmN", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/read-quantification/TcmN/sample-readIDs-files")
\TcmN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
TcmN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
TcmN_filtered_final%>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id,interval)
