#load libraries
require(tidyverse)
blast_filter <- read_tsv("/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/T2PKS-TP-reads/t2pksBlastDF_filter-results.txt", col_names = T)
head(blast_filter)
knitr::opts_chunk$set(echo = TRUE)
#load libraries
require(tidyverse)
#load libraries
require(tidyverse)
#setwd
setwd("/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/HMM-analysis/TcmJ")
cyclase_TcmJ <- read_delim("combined-cyclase_TcmJ-full-synthetic_genomes-results.txt",col_names = F, delim = "\t")
cyclase_TcmJ <- read_delim("combined-cyclase_TcmJ-full-synthetic_genomes-results.txt",col_names = F, delim = "\t")
head(cyclase_TcmJ)
#load TcmJ HMM data and recode sampleType for the complexity of the synthetic sample (#of genomes in samples)
cyclase_TcmJ <- read_delim("combined-cyclase_TcmJ-full-synthetic_genomes-results.txt",col_names = F, delim = "\t")
names(cyclase_TcmJ) <- c("readID", "sampleType", "sampleID", "cyclaseType", "HMMScore")
head(cyclase_TcmJ)
formatHMM<-function(hmmdf){
hmmdfRecoded <- separate(hmmdf, readID, into = c("readIDOnly","F_R_read_frame"), sep = "/", extra = "merge")
hmmdfRecoded_FR <- separate(hmmdfRecoded, F_R_read_frame, into = c("F_R","frameNumb"), sep = "_", extra = "merge")
hmmdfRecodedDF<- within(hmmdfRecoded_FR, readID <- paste(readIDOnly,F_R, sep='/'))
hmmdfRecodedDFUnique<-aggregate(HMMScore ~ readID + sampleID + sampleType + cyclaseType , hmmdfRecodedDF, max)
colnames(hmmdfRecodedDFUnique)<-c("readID","Sample", "sampleType", "cyclaseType","HMMScore")
return(hmmdfRecodedDFUnique)
}
#Keep duplicated reads if they are in different reads
cyclaseTcmJ_recoded<-formatHMM(cyclase_TcmJ)
dim(cyclaseTcmJ_recoded)
dim(cyclase_TcmJ)
head(cyclase_TcmJ)
head(cyclaseTcmJ_recoded)
cyclase_metadata <- read_tsv("../T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST filtered data
t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_filter-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )
head(t2pksBlastDF)
head(t2pksBlastDF)
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
# remove columns to compare the two dataframe
blastDF <- blast_df %>% select(-c(model_cov, interval))
common_reads <- hmm_df %>% semi_join(.,blastDF)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
cyclaseTcmJ_bin <- compare_reads(cyclaseTcmJ_recoded, t2pksBlastDF %>% filter(cyclase_type == "TcmJ"))
compareCyclaseReads<-function(cyclaseDF, blastDF){
names(blastDF)[names(blastDF)=="sseqid"] <-"readID"
names(blastDF)[names(blastDF)=="qseqid"] <-"bgcName"
names(cyclaseDF)[names(cyclaseDF)=="cyclaseType"] <-"cyclase_type"
common_reads <- blastDF %>% inner_join(.,cyclaseDF) %>% select(-c(HMMScore))
common_reads$readCheck<-"common-read"
hmm_unique_reads <- cyclaseDF %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
blast_unique_reads <- blastDF %>% anti_join(.,cyclaseDF)
blast_unique_reads$readCheck<-"blast-unique-read"
blast_common_data <- rbind(common_reads, blast_unique_reads)
allCyclases_TP<- blast_common_data %>% full_join(.,hmm_unique_reads)
allCyclases_TP$bgcName[is.na(allCyclases_TP$bgcName)]<-"hmm-unique-read"
return(allCyclases_TP %>% select(-c(HMMScore)))
}
##############################################################################################
cyclaseTcmJ_bin <- compareCyclaseReads(cyclaseTcmJ_recoded,t2pksBlastDF %>% filter(cyclase_type == "TcmJ"))
head(cyclaseTcmJ_bin)
names(cyclaseTcmJ_bin)[names(cyclaseTcmJ_bin)=="cyclase_type"] <-"cyclaseType"
head(cyclaseTcmJ_bin)
tbale(cyclaseTcmJ_bin$readCheck)
table(cyclaseTcmJ_bin$readCheck)
dim(cyclaseTcmJ_recoded)
19531+1812
knitr::opts_chunk$set(echo = TRUE)
#load TcmJ HMM data and recode sampleType for the complexity of the synthetic sample (#of genomes in samples)
cyclase_TcmJ <- read_delim("combined-cyclase_TcmJ-spHMM-synthetic_genomes-results.txt",col_names = F, delim = "\t")
names(cyclase_TcmJ) <- c("readID", "sampleType", "sampleID", "cyclaseType", "HMMScore", "window","interval")
cyclase_TcmJ$sampleType[str_detect(cyclase_TcmJ$sampleID, "high") ==TRUE] <-"high"
cyclase_TcmJ$sampleType[str_detect(cyclase_TcmJ$sampleID, "low") ==TRUE] <-"low"
cyclase_TcmJ$interval <- factor(cyclase_TcmJ$interval,levels = c(
"0_30","10_40","20_50","30_60","40_70","50_80","60_90","70_100","80_110",
"90_120"))
# Function to aggregate identitical sample reads located at different reading frames
# and take the frame with the highest HMM score
formatHMM<-function(hmmdf){
hmmdfRecoded <- separate(hmmdf, readID, into = c("readIDOnly","F_R_read_frame"), sep = "/", extra = "merge")
hmmdfRecoded_FR <- separate(hmmdfRecoded, F_R_read_frame, into = c("F_R","frameNumb"), sep = "_", extra = "merge")
hmmdfRecodedDF<- within(hmmdfRecoded_FR, readID <- paste(readIDOnly,F_R, sep='/'))
hmmdfRecodedDFUnique<-aggregate(HMMScore ~ readID + sampleID + sampleType + cyclaseType + window + interval, hmmdfRecodedDF, max)
colnames(hmmdfRecodedDFUnique)<-c("readID","Sample", "sampleType", "cyclaseType", "window", "interval","HMMScore")
return(hmmdfRecodedDFUnique)
}
#Keep duplicated reads if they are in different reads
cyclaseTcmJ_recoded<-formatHMM(cyclase_TcmJ)
#BLAST True positive reads mapped to the T2PKS cyclases genes
cyclase_metadata <- read_tsv("../T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST unfiltered reads at 95% pident no readCoverage filter
all_t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_all-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )
#load cyclases interval positions data
tcmj_positions <- read_tsv("../../T2PKS-TP-reads/cyclases_genes-interval_position-data.txt",col_names = T) %>% filter(cyclase_type == "TcmJ")
filter_blast <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(pos_df)){
gene_data <- pos_df[i,]
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart < gene_data$start & qend > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
if (nrow(interval_df) > 0){
for (j in 1:nrow(interval_df)){
in_interval_count <- sum(interval_df[j,]$qstart:interval_df[j,]$qend %in% gene_data$start:gene_data$end)
interval_count <- length(gene_data$start:gene_data$end)
interval_cov <- (in_interval_count/interval_count) * 100
if (interval_cov >=90){
res_df<-interval_df[j,]
res_df$model_cov <- interval_cov
res_df$interval <- gene_data$interval
results <- rbind(results,res_df)
}
}
}
}
return(results)
}
#Filter BLAST reads that are within the TcmJ genes intervals and cover 90% of the model interval
tcmJ_blast_intervals<- filter_blast(all_t2pksBlastDF %>% filter(cyclase_type == "TcmJ"), tcmj_positions)
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
# remove columns to compare the two dataframe
blastDF <- blast_df %>% select(-c(model_cov, interval))
common_reads <- hmm_df %>% semi_join(.,blastDF)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
cyclaseTcmJ_bin <- compare_reads(cyclaseTcmJ_recoded, tcmJ_blast_intervals)
names(cyclaseTcmJ_bin)[names(cyclaseTcmJ_bin)=="cyclase_type"] <-"cyclaseType"
head(cyclaseTcmJ_bin)
distinct(cyclaseTcmJ_bin$cyclaseType)
unique(cyclaseTcmJ_bin$cyclaseType)
#load libraries
require(tidyverse)
#setwd
setwd("/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/HMM-analysis/TcmJ")
#load TcmJ HMM data and recode sampleType for the complexity of the synthetic sample (#of genomes in samples)
cyclase_TcmJ <- read_delim("combined-cyclase_TcmJ-full-synthetic_genomes-results.txt",col_names = F, delim = "\t")
names(cyclase_TcmJ) <- c("readID", "sampleType", "sampleID", "cyclaseType", "HMMScore")
# Function to aggregate identitical sample reads located at different reading frames
# and take the frame with the highest HMM score
formatHMM<-function(hmmdf){
hmmdfRecoded <- separate(hmmdf, readID, into = c("readIDOnly","F_R_read_frame"), sep = "/", extra = "merge")
hmmdfRecoded_FR <- separate(hmmdfRecoded, F_R_read_frame, into = c("F_R","frameNumb"), sep = "_", extra = "merge")
hmmdfRecodedDF<- within(hmmdfRecoded_FR, readID <- paste(readIDOnly,F_R, sep='/'))
hmmdfRecodedDFUnique<-aggregate(HMMScore ~ readID + sampleID + sampleType + cyclaseType , hmmdfRecodedDF, max)
colnames(hmmdfRecodedDFUnique)<-c("readID","Sample", "sampleType", "cyclaseType","HMMScore")
return(hmmdfRecodedDFUnique)
}
#Keep duplicated reads if they are in different reads
cyclaseTcmJ_recoded<-formatHMM(cyclase_TcmJ)
#BLAST True positive reads mapped to the T2PKS cyclases genes
cyclase_metadata <- read_tsv("../T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST filtered data
t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_filter-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )
t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_filter-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )%>% filter(cyclase_type == "TcmJ")
head(t2pksBlastDF)
dim(t2pksBlastDF)
#load TcmJ HMM data and recode sampleType for the complexity of the synthetic sample (#of genomes in samples)
cyclase_TcmJ <- read_delim("combined-cyclase_TcmJ-full-synthetic_genomes-results.txt",col_names = F, delim = "\t")
names(cyclase_TcmJ) <- c("readID", "sampleType", "sampleID", "cyclaseType", "HMMScore")
# Function to aggregate identitical sample reads located at different reading frames
# and take the frame with the highest HMM score
formatHMM<-function(hmmdf){
hmmdfRecoded <- separate(hmmdf, readID, into = c("readIDOnly","F_R_read_frame"), sep = "/", extra = "merge")
hmmdfRecoded_FR <- separate(hmmdfRecoded, F_R_read_frame, into = c("F_R","frameNumb"), sep = "_", extra = "merge")
hmmdfRecodedDF<- within(hmmdfRecoded_FR, readID <- paste(readIDOnly,F_R, sep='/'))
hmmdfRecodedDFUnique<-aggregate(HMMScore ~ readID + sampleID + sampleType + cyclaseType , hmmdfRecodedDF, max)
colnames(hmmdfRecodedDFUnique)<-c("readID","Sample", "sampleType", "cyclaseType","HMMScore")
return(hmmdfRecodedDFUnique)
}
#Keep duplicated reads if they are in different reads
cyclaseTcmJ_recoded<-formatHMM(cyclase_TcmJ)
#BLAST True positive reads mapped to the T2PKS cyclases genes
cyclase_metadata <- read_tsv("../T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST filtered data
t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_filter-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )%>% filter(cyclase_type == "TcmJ")
table(t2pksBlastDF$sseqid, t2pksBlastDF$cyclase_type)
table(t2pksBlastDF$qseqid, t2pksBlastDF$cyclase_type)
#BLAST True positive reads mapped to the T2PKS cyclases genes
cyclase_metadata <- read_tsv("../T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST filtered data
t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_filter-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )%>% filter(cyclase_type == "TcmJ")
compareCyclaseReads<-function(cyclaseDF, blastDF){
names(blastDF)[names(blastDF)=="sseqid"] <-"readID"
names(blastDF)[names(blastDF)=="qseqid"] <-"bgcName"
names(cyclaseDF)[names(cyclaseDF)=="cyclaseType"] <-"cyclase_type"
common_reads <- blastDF %>% inner_join(.,cyclaseDF) %>% select(-c(HMMScore))
common_reads$readCheck<-"common-read"
hmm_unique_reads <- cyclaseDF %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
blast_unique_reads <- blastDF %>% anti_join(.,cyclaseDF)
blast_unique_reads$readCheck<-"blast-unique-read"
blast_common_data <- rbind(common_reads, blast_unique_reads)
allCyclases_TP<- blast_common_data %>% full_join(.,hmm_unique_reads)
allCyclases_TP$bgcName[is.na(allCyclases_TP$bgcName)]<-"hmm-unique-read"
return(allCyclases_TP %>% select(-c(HMMScore)))
}
##############################################################################################
cyclaseTcmJ_bin <- compareCyclaseReads(cyclaseTcmJ_recoded,t2pksBlastDF)
names(cyclaseTcmJ_bin)[names(cyclaseTcmJ_bin)=="cyclase_type"] <-"cyclaseType"
head(cyclaseTcmJ_bin)
cyclaseTcmJ_bin %>% filter(readCheck == "common-read") %>% mutate(medianScore = round(median(HMMScore))) %>% distinct(readCheck, medianScore) %>% ungroup()
dim(cyclaseTcmJ_bin)
cyclaseTcmJ_bin %>% distinct(readID, Sample) %>% nrow()
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
# remove columns to compare the two dataframe
blastDF <- blast_df %>% select(-c(model_cov, interval))
common_reads <- hmm_df %>% semi_join(.,blastDF)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
test_bin <- compare_reads(cyclaseTcmJ_recoded, t2pksBlastDF)
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
common_reads <- hmm_df %>% semi_join(.,blast_df)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blast_df)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
test_bin <- compare_reads(cyclaseTcmJ_recoded, t2pksBlastDF)
table(test_bin$readCheck)
table(cyclaseTcmJ_bin$readCheck)
test_bin %>% filter(readCheck == "common-read") %>% mutate(medianScore = round(median(HMMScore))) %>% distinct(readCheck, medianScore) %>% ungroup()
test_bin %>% group_by(readCheck) %>% mutate(medianScore = round(median(HMMScore))) %>% distinct(readCheck, medianScore) %>% ungroup()
test_bin %>% group_by(readCheck) %>% mutate(medianScore = round(mean(HMMScore))) %>% distinct(readCheck, medianScore) %>% ungroup()
test_bin %>% group_by(readCheck) %>% mutate(medianScore = round(median(HMMScore))) %>% distinct(readCheck, medianScore) %>% ungroup()
test_bin %>% filter(HMMScore >=30) %>% count(readCheck)
test_bin %>% filter(HMMScore >=25) %>% count(readCheck)
test_bin %>% filter(HMMScore >=30) %>% count(readCheck)
test_bin %>% filter(HMMScore >=35) %>% count(readCheck)
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
common_reads <- hmm_df %>% semi_join(.,blast_df)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blast_df)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
compare_reads(cyclaseTcmJ_recoded, t2pksBlastDF) %>% filter(readCheck == "common-read") %>% mutate(medianScore = round(median(HMMScore))) %>% distinct(readCheck, medianScore) %>% ungroup()
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
common_reads <- hmm_df %>% semi_join(.,blast_df)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blast_df)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
compare_reads(cyclaseTcmJ_recoded, t2pksBlastDF) %>% filter(readCheck == "common-read") %>% mutate(medianScore = round(median(HMMScore))) %>% distinct(readCheck, medianScore) %>% ungroup()
head(cyclaseTcmJ_recoded)
TcmJ_filtered_median <- cyclaseTcmJ_recoded %>% filter(HMMScore >=25)
TcmJ_filtered_median_subfive<- cyclaseTcmJ_recoded %>% filter(HMMScore >=25)
TcmJ_filtered_median_plusfive <- cyclaseTcmJ_recoded %>% filter(HMMScore>=30)
TcmJ_filtered_median %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
head(cyclaseTcmJ_bin)
cyclaseTcmJ_bin %>% filter(HMMScore >=25) %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
head(cyclaseTcmJ_bin)
TcmJ_filtered_median <- cyclaseTcmJ_recoded %>% filter(HMMScore >=25) %>% inner_join(.,cyclaseTcmJ_bin)
dim(TcmJ_filtered_median)
head(TcmJ_filtered_median)
cyclaseTcmJ_recoded %>% filter(HMMScore >=25) %>% nrow()
TcmJ_filtered_median <- cyclaseTcmJ_recoded %>% filter(HMMScore >=25) %>% inner_join(.,cyclaseTcmJ_bin)
TcmJ_filtered_median_subfive<- cyclaseTcmJ_recoded %>% filter(HMMScore >=20) %>% inner_join(.,cyclaseTcmJ_bin)
TcmJ_filtered_median_plusfive <- cyclaseTcmJ_recoded %>% filter(HMMScore>=30) %>% inner_join(.,cyclaseTcmJ_bin)
dim(TcmJ_filtered_median)
TcmJ_filtered_median  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
TcmJ_filtered_median_subfive<- cyclaseTcmJ_recoded %>% filter(HMMScore >=20) %>% inner_join(.,cyclaseTcmJ_bin)
TcmJ_filtered_median_subfive  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
TcmJ_filtered_median_plusfive <- cyclaseTcmJ_recoded %>% filter(HMMScore>=30) %>% inner_join(.,cyclaseTcmJ_bin)
TcmJ_filtered_median_plusfive  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
TcmJ_filtered_median <- cyclaseTcmJ_recoded %>% filter(HMMScore >=25) %>% inner_join(.,cyclaseTcmJ_bin)
TcmJ_filtered_median  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_median_check <-c("LZZI01000099.1", "JOFH01000003.1", "AZXI01000013.1", "JOFH01000019.1")
####################################################################################
TcmJ_filtered_median_subfive<- cyclaseTcmJ_recoded %>% filter(HMMScore >=20) %>% inner_join(.,cyclaseTcmJ_bin)
TcmJ_filtered_median_subfive  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_subfive_check <-c("gi|1098135488|emb|FOXX01000008.1|", "LZZI01000099.1", "AZXI01000017.1", "JOFH01000003.1", "LZZI01000061.1", "gi|928414697|gb|LGKI01000478.1|", "AZXI01000013.1", "LZZI01000001.1", "JOFH01000019.1")
####################################################################################
TcmJ_filtered_median_plusfive <- cyclaseTcmJ_recoded %>% filter(HMMScore>=30) %>% inner_join(.,cyclaseTcmJ_bin)
TcmJ_filtered_median_plusfive  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_plusfive_check <- c("AZXI01000013.1")
remaining_hmm_tcmj_pos_median_check <- TcmJ_filtered_median %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_median_check)
dim(remaining_hmm_tcmj_pos_median_check)
head(remaining_hmm_tcmj_pos_median_check)
remaining_hmm_tcmj_pos_median_check <- TcmJ_filtered_median %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_median_check)
dim(remaining_hmm_tcmj_pos_median_check)
remaining_hmm_tcmj_pos_median_check
TcmJ_filtered_median <- cyclaseTcmJ_recoded %>% filter(HMMScore >=25) %>% inner_join(.,cyclaseTcmJ_bin)
#TcmJ_filtered_median  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_median_check <-c("LZZI01000099.1", "JOFH01000003.1", "AZXI01000013.1", "JOFH01000019.1")
remaining_hmm_tcmj_pos_median_check <- TcmJ_filtered_median %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_median_check)
head(remaining_hmm_tcmj_pos_median_check)
remaining_hmm_tcmj_pos_median_check
TcmJ_filtered_median_subfive<- cyclaseTcmJ_recoded %>% filter(HMMScore >=20) %>% inner_join(.,cyclaseTcmJ_bin)
pks_genomes_subfive_check <-c("gi|1098135488|emb|FOXX01000008.1|", "LZZI01000099.1", "AZXI01000017.1", "JOFH01000003.1", "LZZI01000061.1", "gi|928414697|gb|LGKI01000478.1|", "AZXI01000013.1", "LZZI01000001.1", "JOFH01000019.1")
remaining_hmm_tcmj_pos_subfive_check <- TcmJ_filtered_median_subfive %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_subfive_check)
remaining_hmm_tcmj_pos_subfive_check
dim(remaining_hmm_tcmj_pos_subfive_check)
head(remaining_hmm_tcmj_pos_subfive_check)
TcmJ_filtered_median_plusfive <- cyclaseTcmJ_recoded %>% filter(HMMScore>=30) %>% inner_join(.,cyclaseTcmJ_bin)
#TcmJ_filtered_median_plusfive  %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_plusfive_check <- c("AZXI01000013.1")
remaining_hmm_tcmj_pos_plusfive_check <- TcmJ_filtered_median_plusfive %>% filter(readCheck == "hmm-unique-read") %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_plusfive_check)
remaining_hmm_tcmj_pos_plusfive_check
parseReads <- function(HMMdf, modelName, dirname){
setwd(dirname)
samples<-unique(HMMdf$Sample)
for (s in 1:length(samples)){
currentSample<-samples[s]
currentSampleResults<- HMMdf %>% filter(Sample == currentSample)
currentSampleReads<- unique(currentSampleResults$readID)
fileName<-paste0(currentSample,paste("-",modelName,"-hmm_unique",sep =""), ".txt", sep ="")
write.table(currentSampleReads,fileName, quote = F, row.names = F, col.names = F )
}
}
parseReads(remaining_hmm_tcmj_pos_median_check, "cyclaseTcmJ", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/HMM-analysis/TcmJ/full_model-analysis/hmm-unique-analysis/median_score/")
parseReads(remaining_hmm_tcmj_pos_subfive_check, "cyclaseTcmJ", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/HMM-analysis/TcmJ/full_model-analysis/hmm-unique-analysis/minus_five_score/")
parseReads(remaining_hmm_tcmj_pos_plusfive_check, "cyclaseTcmJ", "/Users/francinecamacho/Google Drive/T2PKS-paper/computational_analysis/synthetic_genomes/HMM-analysis/TcmJ/full_model-analysis/hmm-unique-analysis/plus_five_score/")
#load TcmJ HMM data and recode sampleType for the complexity of the synthetic sample (#of genomes in samples)
cyclase_TcmJ <- read_delim("combined-cyclase_TcmJ-spHMM-synthetic_genomes-results.txt",col_names = F, delim = "\t")
names(cyclase_TcmJ) <- c("readID", "sampleType", "sampleID", "cyclaseType", "HMMScore", "window","interval")
cyclase_TcmJ$sampleType[str_detect(cyclase_TcmJ$sampleID, "high") ==TRUE] <-"high"
cyclase_TcmJ$sampleType[str_detect(cyclase_TcmJ$sampleID, "low") ==TRUE] <-"low"
cyclase_TcmJ$interval <- factor(cyclase_TcmJ$interval,levels = c(
"0_30","10_40","20_50","30_60","40_70","50_80","60_90","70_100","80_110",
"90_120"))
# Function to aggregate identitical sample reads located at different reading frames
# and take the frame with the highest HMM score
formatHMM<-function(hmmdf){
hmmdfRecoded <- separate(hmmdf, readID, into = c("readIDOnly","F_R_read_frame"), sep = "/", extra = "merge")
hmmdfRecoded_FR <- separate(hmmdfRecoded, F_R_read_frame, into = c("F_R","frameNumb"), sep = "_", extra = "merge")
hmmdfRecodedDF<- within(hmmdfRecoded_FR, readID <- paste(readIDOnly,F_R, sep='/'))
hmmdfRecodedDFUnique<-aggregate(HMMScore ~ readID + sampleID + sampleType + cyclaseType + window + interval, hmmdfRecodedDF, max)
colnames(hmmdfRecodedDFUnique)<-c("readID","Sample", "sampleType", "cyclaseType", "window", "interval","HMMScore")
return(hmmdfRecodedDFUnique)
}
#Keep duplicated reads if they are in different reads
cyclaseTcmJ_recoded<-formatHMM(cyclase_TcmJ)
#BLAST True positive reads mapped to the T2PKS cyclases genes
cyclase_metadata <- read_tsv("../T2PKS-pos_genomes-cyclase_gene-metadata.txt", col_names = T) %>% filter(used_in_synthetic_metagenome == "Y") %>% select(c(11:9))
# BLAST unfiltered reads at 95% pident no readCoverage filter
all_t2pksBlastDF <- read_delim("../../T2PKS-TP-reads/t2pksBlastDF_all-results.txt", col_names = T, delim = "\t") %>% inner_join(.,cyclase_metadata, by= c("qseqid" = "nucl_cyclase_target_name") )
#load cyclases interval positions data
tcmj_positions <- read_tsv("../../T2PKS-TP-reads/cyclases_genes-interval_position-data.txt",col_names = T) %>% filter(cyclase_type == "TcmJ")
filter_blast <- function(df, pos_df){
results <- data.frame()
for (i in 1:nrow(pos_df)){
gene_data <- pos_df[i,]
#filters datatframe for edges and internal reads compared to model interval
interval_df_1 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
# need to get reads that are bigger than the interval
interval_df_2 <- df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart < gene_data$start & qend > gene_data$end)
interval_df <- rbind(interval_df_1,interval_df_2)
if (nrow(interval_df) > 0){
for (j in 1:nrow(interval_df)){
in_interval_count <- sum(interval_df[j,]$qstart:interval_df[j,]$qend %in% gene_data$start:gene_data$end)
interval_count <- length(gene_data$start:gene_data$end)
interval_cov <- (in_interval_count/interval_count) * 100
if (interval_cov >=90){
res_df<-interval_df[j,]
res_df$model_cov <- interval_cov
res_df$interval <- gene_data$interval
results <- rbind(results,res_df)
}
}
}
}
return(results)
}
#Filter BLAST reads that are within the TcmJ genes intervals and cover 90% of the model interval
tcmJ_blast_intervals<- filter_blast(all_t2pksBlastDF %>% filter(cyclase_type == "TcmJ"), tcmj_positions)
compare_reads <- function(hmm_df, blast_df){
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
names(blast_df)[names(blast_df)=="qseqid"] <-"bgcName"
names(hmm_df)[names(hmm_df)=="cyclaseType"] <-"cyclase_type"
# remove columns to compare the two dataframe
blastDF <- blast_df %>% select(-c(model_cov, interval))
common_reads <- hmm_df %>% semi_join(.,blastDF)
common_reads$readCheck<-"common-read"
hmm_unique_reads <- hmm_df %>% anti_join(.,blastDF)
hmm_unique_reads$readCheck<-"hmm-unique-read"
compared_data <- rbind(common_reads, hmm_unique_reads)
return(compared_data)
}
cyclaseTcmJ_bin <- compare_reads(cyclaseTcmJ_recoded, tcmJ_blast_intervals)
names(cyclaseTcmJ_bin)[names(cyclaseTcmJ_bin)=="cyclase_type"] <-"cyclaseType"
#Function to find the hmm_unique reads that are also mapped using BLAST but didn't make 90% interval
compare_hmm_unique <- function(hmm_df, blast_df, pos_df){
#hmm_unique_df <- hmm_df  %>% inner_join(.,blast_df, by = c("readID"="sseqid", "Sample", "sampleType","cyclaseType"= "cyclase_type"))
hmm_unique_df <- hmm_df  %>% inner_join(.,blast_df, by = c("readID"="sseqid", "Sample", "sampleType", "cyclase_type"))
intervals <- unique(hmm_unique_df$interval)
results <- data.frame()
#check that reads are in the same interval to throw out
for (i in 1:length(intervals)){
gene_interval_data <- pos_df %>% filter(interval == intervals[i])
for (k in 1:nrow(gene_interval_data)){
gene_data <- gene_interval_data[k,]
#filters datatframe for edges and internal reads compared to model interval
interval_df  <- hmm_unique_df %>% filter(qseqid ==gene_data$gene_name) %>%
filter(qstart %in% gene_data$start:gene_data$end | qend %in% gene_data$start:gene_data$end)
if (nrow(interval_df) > 0 ){
results <- rbind(results,interval_df)
}
}
}
return(results%>% distinct())
}
#Filter OxyN data with cutoffs to compare to BLAST interval reads
TcmJ_filtered_median <- cyclaseTcmJ_recoded %>% filter((interval == "0_30" & HMMScore>=25)|
(interval == "10_40" & HMMScore >=30)|
(interval == "20_50" & HMMScore >=25)|
(interval == "30_60" & HMMScore >=30)|
(interval == "40_70" & HMMScore >=30 )|
(interval == "50_80" & HMMScore>=25)|
(interval == "60_90" & HMMScore >=25 ) |
(interval == "70_100" & HMMScore >=25 )|
(interval == "80_110" & HMMScore >=25 )|
(interval == "90_120" & HMMScore >=30 ))
TcmJ_filtered_median_subfive<- cyclaseTcmJ_recoded %>% filter((interval == "0_30" & HMMScore>=20)|
(interval == "10_40" & HMMScore >=25)|
(interval == "20_50" & HMMScore >=20)|
(interval == "30_60" & HMMScore >=25)|
(interval == "40_70" & HMMScore >=25 )|
(interval == "50_80" & HMMScore>=20)|
(interval == "60_90" & HMMScore >=20 ) |
(interval == "70_100" & HMMScore >=20 )|
(interval == "80_110" & HMMScore >=20 )|
(interval == "90_120" & HMMScore >=25 ))
TcmJ_filtered_median_plusfive <- cyclaseTcmJ_recoded %>% filter((interval == "0_30" & HMMScore>=30)|
(interval == "10_40" & HMMScore >=35)|
(interval == "20_50" & HMMScore >=30)|
(interval == "30_60" & HMMScore >=35)|
(interval == "40_70" & HMMScore >=35 )|
(interval == "50_80" & HMMScore>=30)|
(interval == "60_90" & HMMScore >=30 ) |
(interval == "70_100" & HMMScore >=30 )|
(interval == "80_110" & HMMScore >=30 )|
(interval == "90_120" & HMMScore >=35 ))
#return the hmm-unique reads
return_hmm_unique <- function(hmm_df, blast_df){
oxyn_hmm_df <- hmm_df  %>% select(-c(window))
oxyn_hmm_df$interval <- as.character(oxyn_hmm_df$interval)
names(oxyn_hmm_df)[names(oxyn_hmm_df)=="cyclaseType"] <-"cyclase_type"
names(blast_df)[names(blast_df)=="sseqid"] <-"readID"
OxyN_hmm_unique <- oxyn_hmm_df %>% anti_join(.,blast_df, by= c("readID", "Sample", "sampleType", "interval"))
return(OxyN_hmm_unique)
}
median_tcmJ_hmmunique <-return_hmm_unique(TcmJ_filtered_median, tcmJ_blast_intervals)
median_tcmJ_hmmunique_less_model_cov<-compare_hmm_unique(median_tcmJ_hmmunique,all_t2pksBlastDF,tcmj_positions )
median_remaining_hmm_tcmj<- median_tcmJ_hmmunique %>% anti_join(.,median_tcmJ_hmmunique_less_model_cov)
table(median_remaining_hmm_tcmj$interval)
pks_genomes_median_check <- c("AZXI01000013.1", "LZZI01000042.1", "LZZI01000061.1","JOFH01000003.1", "LZZI01000001.1")
#median_remaining_hmm_tcmj %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
remaining_hmm_tcmj_pos_median_check <- median_remaining_hmm_tcmj %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_median_check)
############################################################################################################################
subfive_tcmJ_hmmunique <-return_hmm_unique(TcmJ_filtered_median_subfive, tcmJ_blast_intervals)
subfive_tcmJ_hmmunique_less_model_cov<-compare_hmm_unique(subfive_tcmJ_hmmunique,all_t2pksBlastDF,tcmj_positions )
subfive_remaining_hmm_tcmj<- subfive_tcmJ_hmmunique %>% anti_join(.,subfive_tcmJ_hmmunique_less_model_cov)
table(subfive_remaining_hmm_tcmj$interval)
#subfive_remaining_hmm_tcmj %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_subfive_check <- c("AZXI01000071.1", "gi|640932354|gb|JJOH01000026.1|", "AZXI01000013.1", "JOFH01000019.1", "LZZI01000099.1", "gi|1098134558|emb|FOXX01000014.1|", "gi|529222834|ref|NC_021985.1|", "LZZI01000042.1", "AZXI01000006.1", "gi|640930117|gb|JJOH01000105.1|", "gi|754859657|ref|NZ_CP009285.1|", "LZZI01000061.1", "gi|1081599064|emb|FMWJ01000030.1|", "LZZI01000045.1", "AZXI01000017.1", "JOFH01000003.1", "AZXI01000071.1", "gi|640934298|gb|JJOH01000015.1|", "JOFH01000047.1", "LZZI01000001.1", "JOFH01000001.1", "LZZI01000051.1", "gi|928417113|gb|LGKI01000312.1|", "AZXI01000003.1", "OBDZ01000041.1")
remaining_hmm_tcmj_pos_subfive_check <- subfive_remaining_hmm_tcmj %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_subfive_check)
###############################################################################################################################################
plusfive_tcmJ_hmmunique <-return_hmm_unique(TcmJ_filtered_median_plusfive, tcmJ_blast_intervals)
plusfive_tcmJ_hmmunique_less_model_cov<-compare_hmm_unique(plusfive_tcmJ_hmmunique,all_t2pksBlastDF,tcmj_positions )
plusfive_remaining_hmm_tcmj<- plusfive_tcmJ_hmmunique %>% anti_join(.,plusfive_tcmJ_hmmunique_less_model_cov)
table(plusfive_remaining_hmm_tcmj$interval)
#plusfive_remaining_hmm_tcmj %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% distinct(scaffold_id)
pks_genomes_plusfive_check <- c("AZXI01000013.1", "JOFH01000003.1")
remaining_hmm_tcmj_pos_plusfive_check <- plusfive_remaining_hmm_tcmj %>% separate(readID, c("scaffold_id", "rest_id"), sep = "-", remove = F) %>% filter(scaffold_id %in% pks_genomes_plusfive_check)
remove_tcmJ_reads_subfive  <- c("JOFH01000019.1-14112/2")
subfive_false_postives <- subfive_remaining_hmm_tcmj %>% filter(!readID %in% remove_tcmJ_reads_subfive)
head(tcmJ_blast_intervals)
dim(tcmJ_blast_intervals)
tcmJ_blast_intervals %>% distinct(sseqid, Sample, interval) %>% nrow()
TcmJ_filtered_median %>% inner_join(.,tcmJ_blast_intervals) %>% nrow()
TcmJ_filtered_median %>% inner_join(.,tcmJ_blast_intervals) %>% distinct(readID, Sample) %>% nrow()
